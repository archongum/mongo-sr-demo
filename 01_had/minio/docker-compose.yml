x-service-templates:
  template_minio: &template_minio
    image: minio/minio
    restart: always
    command:
      - server
      - /data
      - --console-address
      - ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    healthcheck:
      test: curl -f http://localhost:9000/minio/health/live
      interval: 3s
      timeout: 2s
      retries: 10
services:
  minio1:
    <<: *template_minio
    hostname: minio1
    container_name: minio1
    ports:
      - 19000:9000
      - 19001:9001
    volumes:
      - ./data1:/data
  minio2:
    <<: *template_minio
    hostname: minio2
    container_name: minio2
    ports:
      - 29000:9000
      - 29001:9001
    volumes:
      - ./data2:/data
  mc:
    image: minio/mc
    hostname: mc
    container_name: mc
    depends_on:
      minio1:
        condition: service_healthy
      minio2:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio1 http://minio1:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio1/bucket-1;
      /usr/bin/mc mb minio1/bucket-1;
      /usr/bin/mc policy set public minio1/bucket-1;
      until (/usr/bin/mc config host add minio2 http://minio2:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio2/bucket-2;
      /usr/bin/mc mb minio2/bucket-2;
      /usr/bin/mc policy set public minio2/bucket-2;
      tail -f /dev/null
      "
